# This GitHub action can publish assets for release when a tag is created.
# Currently its setup to run on any tag that matches the pattern "v*" (ie. v0.1.0).
#
# This uses an action (hashicorp/ghaction-import-gpg) that assumes you set your
# private key in the `GPG_PRIVATE_KEY` secret and passphrase in the `PASSPHRASE`
# secret. If you would rather own your own GPG handling, please fork this action
# or use an alternative one for key handling.
#
# You will need to pass the `--batch` flag to `gpg` in your signing step
# in `goreleaser` to indicate this is being used in a non-interactive mode.
#
name: Release

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  release-please:
    name: Release Please
    outputs:
      release_created: ${{ steps.release-please.outputs.release_created }}
    runs-on: ubuntu-22.04
    steps:
      - id: release-please
        uses: google-github-actions/release-please-action@v3
        with:
          bump-minor-pre-major: true
          package-name: terraform-provider-talos
          pull-request-title-pattern: "chore(version): release v${version}"
          release-type: go
          token: ${{ secrets.RELEASE_PLEASE_TOKEN }}
  goreleaser:
    if: ${{ needs.release-please.outputs.release_created }}
    name: GoReleaser
    needs: release-please
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Unshallow
        run: git fetch --prune --unshallow
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.18
      - name: Import GPG key
        id: import_gpg
        uses: hashicorp/ghaction-import-gpg@v2.1.0
        env:
          # These secrets will need to be configured for the repository:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
          PASSPHRASE: ${{ secrets.PASSPHRASE }}
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v3.0.0
        with:
          version: latest
          args: release --rm-dist
        env:
          GPG_FINGERPRINT: ${{ steps.import_gpg.outputs.fingerprint }}
          # GitHub sets this automatically
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
